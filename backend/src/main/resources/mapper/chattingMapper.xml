<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.personalbuddyback.mapper.ChattingMapper">

<!--  채팅방 존재 여부  -->
<!--  채팅방 요청자와, 수신자 1 AND 2 OR 2 AND 1로, 해당 채팅방이 존재하는지 검증  -->
    <select id="selectChatRoomIsTrue" parameterType="map" resultType="Long">
        SELECT ID
        FROM TBL_CHAT_ROOM
        WHERE (FIRST_MEMBER_ID = #{firstMemberId} AND SECOND_MEMBER_ID = #{secondMemberId})
        OR (FIRST_MEMBER_ID = #{secondMemberId} AND SECOND_MEMBER_ID = #{firstMemberId})
    </select>

<!--  채팅에서 필요한 채팅방 정보  -->
    <select id="selectChatRoom" parameterType="Long" resultType="ChatRoomViewDTO">
        SELECT
            TR.ID AS CHAT_ROOM_ID,
            TM.ID AS MEMBER_ID,
            TM.MEMBER_NICKNAME,
            TM.MEMBER_IMG_NAME,
            TM.MEMBER_IMG_PATH
        FROM TBL_CHAT_ROOM TR
        JOIN TBL_MEMBER TM
        ON TM.ID =
        CASE
            WHEN TR.FIRST_MEMBER_ID = #{memberId} THEN TR.SECOND_MEMBER_ID
            WHEN TR.SECOND_MEMBER_ID = #{memberId} THEN TR.FIRST_MEMBER_ID
        END
        WHERE TR.ID = #{chatRoomId}
    </select>

<!--  채팅방 리스트 불러오기  -->
<!--  - 요청자 or 수신자 중 내가 포함된 채팅방  -->
<!--  - 숨김 상태가 아닌 방만 조회  -->
<!--  - 상대방 닉네임, 프로필, 즐겨찾기 여부, 팔로잉 여부 포함  -->
<!--  - 마지막 채팅 내용, 시간 포함  -->
<!--  - 안 읽은 메시지 수 JOIN 조회 포함  -->
    <select id="selectAllChatRoom" parameterType="map" resultType="ChatRoomViewDTO">
        SELECT
            TCR.ID AS CHAT_ROOM_ID,
            TCR.CHAT_ROOM_LAST_CHAT,
            TCR.CHAT_ROOM_LAST_CHAT_TIME AS chatRoomLastChatTime,
            TM.ID AS MEMBER_ID,
            TM.MEMBER_NICKNAME,
            TM.MEMBER_IMG_NAME,
            TM.MEMBER_IMG_PATH,
        CASE WHEN TF.ID IS NOT NULL THEN 1 ELSE 0 END AS IS_FOLLOWING,
        CASE WHEN TF.FOLLOW_FAVORITE = 1 THEN 1 ELSE 0 END AS IS_FAVOURITE,
        (
            SELECT COUNT(ID)
            FROM TBL_CHAT TC
            WHERE TC.CHAT_ROOM_ID = TCR.ID
            AND TC.CHAT_READING = 0
            AND TC.CHAT_WRITER_MEMBER_ID != #{memberId}
        ) AS UNREAD_COUNT
        FROM TBL_CHAT_ROOM TCR
        JOIN TBL_MEMBER TM
        ON ((TCR.FIRST_MEMBER_ID = TM.ID AND TCR.SECOND_MEMBER_ID = #{memberId})
        OR (TCR.SECOND_MEMBER_ID = TM.ID AND TCR.FIRST_MEMBER_ID = #{memberId}))
        LEFT JOIN TBL_FOLLOW TF
        ON TF.FOLLOWER_MEMBER_ID = TM.ID
        AND TF.FOLLOWING_MEMBER_ID = #{memberId}
        WHERE ((TCR.FIRST_MEMBER_ID = #{memberId} AND TCR.FIRST_MEMBER_HIDE = 1)
        OR (TCR.SECOND_MEMBER_ID = #{memberId} AND TCR.SECOND_MEMBER_HIDE = 1))
        <if test="searchNickname != null and searchNickname != ''">
            AND TM.MEMBER_NICKNAME LIKE '%' || #{searchNickname} || '%'
        </if>
        <if test="filterType == 'follow'">
            AND TF.ID IS NOT NULL
        </if>
        <if test="filterType == 'favorite'">
            AND TF.FOLLOW_FAVORITE = 1
        </if>
        ORDER BY TCR.CHAT_ROOM_LAST_CHAT_TIME DESC
    </select>

<!--  멤버가 채팅방의 퍼스트멤버인지, 세컨드 멤버인지 구별  -->
    <select id="selectChatMemberPosition" parameterType="map" resultType="string">
        SELECT
            CASE
                WHEN FIRST_MEMBER_ID = #{memberId} THEN 'FIRST'
                WHEN SECOND_MEMBER_ID = #{memberId} THEN 'SECOND'
                ELSE NULL
            END AS POSITION
        FROM TBL_CHAT_ROOM
        WHERE ID = #{chatRoomId}
    </select>

<!--  채팅 내역 불러오기  -->
<!--  페이징 처리 고려중, 아이디 혹은 시간순으로 채팅 내역을 불러오기  -->
    <select id="selectChat" parameterType="Long" resultType="ChatViewDTO">
        SELECT
            TC.ID,
            TC.CHAT_CONTENT,
            TC.CHAT_READING,
            TC.CHAT_SEND_TIME,
            TC.CHAT_WRITER_MEMBER_ID,
            TC.CHAT_ROOM_ID,
            TM.MEMBER_NICKNAME,
            TM.MEMBER_IMG_NAME,
            TM.MEMBER_IMG_PATH
        FROM TBL_CHAT TC
        JOIN TBL_MEMBER TM
        ON TC.CHAT_WRITER_MEMBER_ID = TM.ID
        WHERE TC.CHAT_ROOM_ID = #{chatRoomId}
        AND TC.CHAT_VISIBLE = 1
        ORDER BY TC.CHAT_SEND_TIME ASC
    </select>

<!--  읽지않은 채팅의 수  -->
    <select id="selectAllNotReadChat" parameterType="Long" resultType="Integer">
        SELECT COUNT(TC.ID)
        FROM TBL_CHAT TC
        JOIN TBL_CHAT_ROOM TCR ON TC.CHAT_ROOM_ID = TCR.ID
        WHERE TC.CHAT_READING = 0
        AND (
            (TCR.FIRST_MEMBER_ID = #{memberId} AND TC.CHAT_WRITER_MEMBER_ID != #{memberId}) OR
            (TCR.SECOND_MEMBER_ID = #{memberId} AND TC.CHAT_WRITER_MEMBER_ID != #{memberId})
        )
    </select>

<!--  채팅방 생성  -->
<!--  존재 여부로 찾지 못한경우, 채팅방을 생성  -->
    <insert id="insertChatRoom" parameterType="ChatRoomVO">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT SEQ_CHAT_ROOM.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_CHAT_ROOM (ID, FIRST_MEMBER_ID, SECOND_MEMBER_ID)
        VALUES (#{id}, #{firstMemberId}, #{secondMemberId})
    </insert>

<!--  채팅 작성  -->
<!--  아이디, 내용, 보낸 시간, 읽음 여부, 송신자, 채팅방의 ID  -->
    <insert id="insertChat" parameterType="ChatVO">
        INSERT INTO TBL_CHAT (ID, CHAT_CONTENT, CHAT_WRITER_MEMBER_ID, CHAT_ROOM_ID)
        VALUES (SEQ_CHAT.NEXTVAL, #{chatContent}, #{chatWriterMemberId}, #{chatRoomId})
    </insert>

<!--  채팅방 마지막 채팅 업데이트  -->
<!--  마지막 채팅의 시간과 기록을 채팅방 리스트에 업데이트  -->
    <update id="updateChatRoom" parameterType="ChatVO">
        UPDATE TBL_CHAT_ROOM
        SET CHAT_ROOM_LAST_CHAT = #{chatContent},
            CHAT_ROOM_LAST_CHAT_TIME = SYSDATE
        WHERE ID = #{chatRoomId}
    </update>

<!--  채팅방 나가기(숨기기)  -->
<!--  수신 유저가 나감 = 수신 유저의 상태를 1로 변환해서 숨김 처리  -->
    <update id="updateHideChatRoom" parameterType="map">
        UPDATE TBL_CHAT_ROOM
        SET
        <choose>
            <when test="position == 'FIRST'">
                FIRST_MEMBER_HIDE = 0
            </when>
            <otherwise>
                SECOND_MEMBER_HIDE = 0
            </otherwise>
        </choose>
        WHERE ID = #{chatRoomId}
    </update>

<!--  채팅방 보이기  -->
<!--  내가 숨긴 채팅방에서 메세지를 받거나, 어떠한 경로로 해당 채팅방을 다시 열 때, 상대의 숨김처리를 다시 1으로  -->
    <update id="updateViewChatRoom" parameterType="map">
        UPDATE TBL_CHAT_ROOM
        SET
        <choose>
            <when test="position == 'FIRST'">
                FIRST_MEMBER_HIDE = 1
            </when>
            <otherwise>
                SECOND_MEMBER_HIDE = 1
            </otherwise>
        </choose>
        WHERE ID = #{chatRoomId}
    </update>

<!--  채팅 읽음 처리  -->
<!--  - 채팅방을 클릭한 순간, 자신이 보지 않은 메시지를 읽음 처리  -->
<!--  - 내가 보낸 메시지는 제외됨  -->
    <update id="updateChatRead" parameterType="map">
        UPDATE TBL_CHAT
        SET CHAT_READING = 1
        WHERE CHAT_ROOM_ID = #{chatRoomId} AND CHAT_WRITER_MEMBER_ID != #{memberId} AND CHAT_READING = 0
    </update>

<!--  채팅 삭제(숨기기)  -->
<!--  해당 채팅의 내용을 숨김 처리(데이터 보관용) / 채팅방에 있는 모든 유저는 해당 채팅을 볼 수 없음  -->
    <update id="updateHideChat" parameterType="map">
        UPDATE TBL_CHAT
        SET CHAT_VISIBLE = 0
        WHERE ID = #{chatId} AND CHAT_WRITER_MEMBER_ID = #{memberId}
    </update>

<!--  회원탈퇴용 채팅방 전체 삭제  -->
    <delete id="deleteAllChatRoom" parameterType="Long">
        DELETE FROM TBL_CHAT_ROOM
        WHERE FIRST_MEMBER_ID = #{memberId} OR SECOND_MEMBER_ID = #{memberId}
    </delete>

<!--  회원탈퇴용 채팅 전체 삭제  -->
    <delete id="deleteAllChat" parameterType="Long">
        DELETE FROM TBL_CHAT
        WHERE CHAT_ROOM_ID = #{chatRoomId}
    </delete>

</mapper>
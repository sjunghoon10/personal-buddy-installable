<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.personalbuddyback.mapper.MyTreeMapper">
<!--    멤버 - 성장나무 연결 생성 쿼리 (최초 멤버 가입 시 생성)      -->
    <insert id="insertMemberTree" parameterType="Long">
        INSERT INTO TBL_TREE(ID, MEMBER_ID)
        VALUES(SEQ_ITEM.NEXTVAL, #{memberId})
    </insert>

<!--    아이템 구매 시, 멤버의 나무에 추가하기  -->
    <insert id="insertTreeCustomizing" parameterType="TreeCustomizingVO">
        INSERT INTO TBL_TREE_CUSTOMIZING
        VALUES (
            SEQ_TREE_CUSTOMIZING.NEXTVAL,
            DEFAULT,
            DEFAULT,
            DEFAULT,
            #{itemId},
            #{treeId}
        )
    </insert>

    <select id="selectTreeIdByMemberId" parameterType="Long" resultType="Long">
        SELECT ID
        FROM TBL_TREE
        WHERE MEMBER_ID = #{memberId}
    </select>

<!--    멤버의 성장나무 전체 아이템 리스트 조회 (아이템 아이디 별로 분류)     -->
    <select id="selectAllMemberItemListByMemberId" parameterType="map" resultType="TreeItemListDTO">
        SELECT
            VWT.ID,
            VWT.MEMBER_ID,
            VWT.ITEM_ID,
            VWT.TREE_CUSTOMIZING_POSITION_X,
            VWT.TREE_CUSTOMIZING_POSITION_Y,
            VWT.ITEM_NAME,
            VWT.ITEM_TYPE,
            VWT.ITEM_IMG_PATH,
            VWT.ITEM_IMG_NAME,
            VWT.ITEM_SIZE_WIDTH,
            VWT.ITEM_SIZE_HEIGHT,
            VWI.TOTAL_COUNT,
            VWI.APPLIED_COUNT,
            VWI.NOT_APPLIED_COUNT
        FROM VW_MEMBER_TREE_ITEM_COUNT_SUMMARY VWI
            JOIN(
                SELECT
                    ID,
                    MEMBER_ID,
                    ITEM_ID,
                    TREE_CUSTOMIZING_POSITION_X,
                    TREE_CUSTOMIZING_POSITION_Y,
                    ITEM_NAME,
                    ITEM_TYPE,
                    ITEM_IMG_PATH,
                    ITEM_IMG_NAME,
                    ITEM_SIZE_WIDTH,
                    ITEM_SIZE_HEIGHT
                FROM (
                     SELECT
                         ID,
                         MEMBER_ID,
                         ITEM_ID,
                         TREE_CUSTOMIZING_POSITION_X,
                         TREE_CUSTOMIZING_POSITION_Y,
                         ITEM_NAME,
                         ITEM_TYPE,
                         ITEM_IMG_PATH,
                         ITEM_IMG_NAME,
                         ITEM_SIZE_WIDTH,
                         ITEM_SIZE_HEIGHT,
                         ROW_NUMBER() OVER (PARTITION BY MEMBER_ID, ITEM_ID ORDER BY ITEM_ID) AS RN
                     FROM VW_MEMBER_TREE
                 )
                WHERE RN = 1
            ) VWT
            ON VWI.ITEM_ID = VWT.ITEM_ID
        WHERE VWT.MEMBER_ID = #{memberId}
        ORDER BY VWI.APPLIED_COUNT DESC
        <choose>
            <when test="itemType != null and itemType == '스티커'">
                AND VMT.ITEM_TYPE = #{itemType}
            </when>
            <when test="itemType != null and itemType == '나무'">
                AND VMT.ITEM_TYPE = #{itemType}
            </when>
            <when test="itemType != null and itemType == '배경'">
                AND VMT.ITEM_TYPE = #{itemType}
            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select>

<!--    멤버의 성장나무 전체 아이템 리스트 조회 (커스터마이징 아이디 별로 분류)      -->
    <select id="selectAllTreeCustomizingByMemberId" parameterType="Long" resultType="TreeViewDTO">
        SELECT
            ID,
            MEMBER_ID,
            ITEM_ID,
            TREE_CUSTOMIZING_ID,
            TREE_CUSTOMIZING_POSITION_X,
            TREE_CUSTOMIZING_POSITION_Y,
            TREE_CUSTOMIZING_APPLY,
            ITEM_NAME,
            ITEM_TYPE,
            ITEM_IMG_PATH,
            ITEM_IMG_NAME,
            ITEM_SIZE_WIDTH,
            ITEM_SIZE_HEIGHT
        FROM VW_MEMBER_TREE
        WHERE MEMBER_ID = #{memberId}
    </select>

<!--    멤버의 전시된 나무 아이템 목록 조회   -->
    <select id="selectAppliedTreeCustomizingByMemberId" parameterType="Long" resultType="TreeViewDTO">
        SELECT
            ID,
            MEMBER_ID,
            ITEM_ID,
            TREE_CUSTOMIZING_ID,
            TREE_CUSTOMIZING_POSITION_X,
            TREE_CUSTOMIZING_POSITION_Y,
            TREE_CUSTOMIZING_APPLY,
            ITEM_NAME,
            ITEM_TYPE,
            ITEM_IMG_PATH,
            ITEM_IMG_NAME,
            ITEM_SIZE_WIDTH,
            ITEM_SIZE_HEIGHT
        FROM VW_MEMBER_TREE
        WHERE MEMBER_ID = #{memberId}
        AND TREE_CUSTOMIZING_APPLY = 1
    </select>

    <!--    성장나무 수정을 위한 itemId 로 추가할 아이템의 정보 받기-->
    <select id="selectNotAppliedTreeItemByMemberAndItemId" parameterType="map" resultType="TreeViewDTO">
        SELECT
            ID,
            MEMBER_ID,
            ITEM_ID,
            TREE_CUSTOMIZING_ID,
            TREE_CUSTOMIZING_POSITION_X,
            TREE_CUSTOMIZING_POSITION_Y,
            TREE_CUSTOMIZING_APPLY,
            ITEM_NAME,
            ITEM_TYPE,
            ITEM_IMG_PATH,
            ITEM_IMG_NAME,
            ITEM_SIZE_WIDTH,
            ITEM_SIZE_HEIGHT
        FROM (
                 SELECT
                     ID,
                     MEMBER_ID,
                     ITEM_ID,
                     TREE_CUSTOMIZING_ID,
                     TREE_CUSTOMIZING_POSITION_X,
                     TREE_CUSTOMIZING_POSITION_Y,
                     TREE_CUSTOMIZING_APPLY,
                     ITEM_NAME,
                     ITEM_TYPE,
                     ITEM_IMG_PATH,
                     ITEM_IMG_NAME,
                     ITEM_SIZE_WIDTH,
                     ITEM_SIZE_HEIGHT,
                     ROW_NUMBER() OVER (PARTITION BY TREE_CUSTOMIZING_APPLY ORDER BY ITEM_ID) AS RN
                 FROM VW_MEMBER_TREE
                 WHERE MEMBER_ID = #{memberId} AND TREE_CUSTOMIZING_APPLY = 0 AND ITEM_ID = #{itemId}
             )
        WHERE RN = 1
    </select>

    <!--    성장나무 수정을 위한 itemId 로 제거할 아이템의 customizingId 받기-->
    <select id="selectAppliedTreeItemByMemberAndItemId" parameterType="map" resultType="TreeViewDTO">
        SELECT
            ID,
            MEMBER_ID,
            ITEM_ID,
            TREE_CUSTOMIZING_ID,
            TREE_CUSTOMIZING_POSITION_X,
            TREE_CUSTOMIZING_POSITION_Y,
            TREE_CUSTOMIZING_APPLY,
            ITEM_NAME,
            ITEM_TYPE,
            ITEM_IMG_PATH,
            ITEM_IMG_NAME,
            ITEM_SIZE_WIDTH,
            ITEM_SIZE_HEIGHT
        FROM (
                 SELECT
                     ID,
                     MEMBER_ID,
                     ITEM_ID,
                     TREE_CUSTOMIZING_ID,
                     TREE_CUSTOMIZING_POSITION_X,
                     TREE_CUSTOMIZING_POSITION_Y,
                     TREE_CUSTOMIZING_APPLY,
                     ITEM_NAME,
                     ITEM_TYPE,
                     ITEM_IMG_PATH,
                     ITEM_IMG_NAME,
                     ITEM_SIZE_WIDTH,
                     ITEM_SIZE_HEIGHT,
                     ROW_NUMBER() OVER (PARTITION BY TREE_CUSTOMIZING_APPLY ORDER BY ITEM_ID) AS RN
                 FROM VW_MEMBER_TREE
                 WHERE MEMBER_ID = #{memberId} AND TREE_CUSTOMIZING_APPLY = 1 AND ITEM_ID = #{itemId}
             )
        WHERE RN = 1
    </select>

<!--    멤버 성장나무 아이템 수정     -->
    <update id="updateTreeCustomizing" parameterType="TreeViewDTO">
        UPDATE TBL_TREE_CUSTOMIZING
        SET
            TREE_CUSTOMIZING_POSITION_X = #{treeCustomizingPositionX},
            TREE_CUSTOMIZING_POSITION_Y = #{treeCustomizingPositionY},
            TREE_CUSTOMIZING_APPLY = #{treeCustomizingApply}
        WHERE ID = #{treeCustomizingId}
    </update>

<!--    멤버 성장나무 목록들 삭제      -->
    <delete id="deleteTreeCustomizing" parameterType="Long">
        DELETE
        FROM TBL_TREE_CUSTOMIZING
        WHERE TREE_ID = #{treeId}
    </delete>

<!--    멤버 성장나무 삭제    -->
    <delete id="deleteTree" parameterType="Long">
        DELETE
        FROM TBL_TREE
        WHERE MEMBER_ID = #{memberId}
    </delete>
</mapper>
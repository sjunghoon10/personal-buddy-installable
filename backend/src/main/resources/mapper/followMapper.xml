<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.personalbuddyback.mapper.FollowMapper">
<!--  팔로워 추가  -->
<!--  followerMemberId : 구독된 대상 / followingMemberId : 구독자   -->
    <insert id="insert" parameterType="FollowVO">
        INSERT INTO TBL_FOLLOW (ID, FOLLOWER_MEMBER_ID, FOLLOWING_MEMBER_ID)
        VALUES (SEQ_FOLLOW.NEXTVAL, #{followerMemberId}, #{followingMemberId})
    </insert>

<!--  팔로워 리스트 보기  -->
<!--  나를 구독한 사람들의 리스트  -->
    <select id="selectFollowerList" parameterType="map" resultType="ProfileCardDTO">
        SELECT
            TM.ID,
            TM.MEMBER_NICKNAME,
            TM.MEMBER_STATUS_MESSAGE,
            TM.MEMBER_IMG_NAME,
            TM.MEMBER_IMG_PATH,
            CASE
                WHEN TF2.ID IS NOT NULL THEN 1 ELSE 0
            END AS IS_FOLLOW,
            TF2.FOLLOW_FAVORITE AS FAVORITE
        FROM TBL_FOLLOW TF
        JOIN TBL_MEMBER TM
        ON TF.FOLLOWING_MEMBER_ID = TM.ID
        LEFT JOIN TBL_FOLLOW TF2
        ON TF2.FOLLOWING_MEMBER_ID = #{myId}
        AND TF2.FOLLOWER_MEMBER_ID = TM.ID
        WHERE TF.FOLLOWER_MEMBER_ID = #{myId}
        <if test="searchNickname != null and searchNickname != ''">
            AND TM.MEMBER_NICKNAME LIKE '%' || #{searchNickname} || '%'
        </if>
        <if test="filterType == 'follow'">
            AND TF2.ID IS NOT NULL
        </if>
        <if test="filterType == 'favorite'">
            AND TF2.FOLLOW_FAVORITE = 1
        </if>
        ORDER BY TF.FOLLOWING_DATE DESC
    </select>

<!--  팔로우 리스트 보기  -->
<!--  내가 구독한 사람들의 리스트  -->
    <select id="selectFollowList" parameterType="map" resultType="ProfileCardDTO">
        SELECT
            TM.ID,
            TM.MEMBER_NICKNAME,
            TM.MEMBER_STATUS_MESSAGE,
            TM.MEMBER_IMG_NAME,
            TM.MEMBER_IMG_PATH,
            TF.FOLLOW_FAVORITE AS FAVORITE
        FROM TBL_FOLLOW TF
        JOIN TBL_MEMBER TM
        ON TF.FOLLOWING_MEMBER_ID = #{myId}
        WHERE TF.FOLLOWER_MEMBER_ID = TM.ID
        <if test="searchNickname != null and searchNickname != ''">
            AND TM.MEMBER_NICKNAME LIKE '%' || #{searchNickname} || '%'
        </if>
        <if test="filterType == 'favorite'">
            AND TF.FOLLOW_FAVORITE = 1
        </if>
        ORDER BY TF.FOLLOWING_DATE DESC
    </select>

<!--  즐겨찾기 조회  -->
<!--  내가 구독한 유저들 중, 즐겨찾기가 1인 유저를 가져오기  -->
    <select id="selectFavorite" parameterType="Long" resultType="FollowVO">
        SELECT ID, FOLLOWER_MEMBER_ID, FOLLOWING_MEMBER_ID, FOLLOW_FAVORITE, FOLLOWING_DATE
        FROM TBL_FOLLOW
        WHERE FOLLOWING_MEMBER_ID = #{followingMemberId} AND FOLLOW_FAVORITE = 1
    </select>

<!--  맞팔 여부  -->
    <select id="selectMutualFollows" parameterType="Long" resultType="MemberVO">
        SELECT TBF1.FOLLOWING_MEMBER_ID, TBM.MEMBER_NICKNAME, TBM.MEMBER_IMG_NAME, TBM.MEMBER_IMG_PATH
        FROM TBL_FOLLOW TBF1
        JOIN TBL_MEMBER TBM
        ON TBF1.FOLLOWING_MEMBER_ID = TBM.ID
        WHERE TBF1.FOLLOWER_MEMBER_ID = #{memberId}
        AND TBF1.FOLLOWING_MEMBER_ID IN (
            SELECT TBF2.FOLLOWER_MEMBER_ID
            FROM TBL_FOLLOW TBF2
            WHERE TBF2.FOLLOWING_MEMBER_ID = #{memberId}
        )
    </select>
<!--  팔로우 조회 + 상대 프로필 카드  -->
    <select id="selectProfileCard" parameterType="map" resultType="ProfileCardDTO">
        SELECT
            TM.ID,
            TM.MEMBER_NICKNAME,
            TM.MEMBER_STATUS_MESSAGE,
            TM.MEMBER_IMG_NAME,
            TM.MEMBER_IMG_PATH,
            TM.MEMBER_POINT,
            (
                SELECT COUNT(ID)
                FROM TBL_FOLLOW
                WHERE FOLLOWER_MEMBER_ID = TM.ID
            ) AS FOLLOWER_COUNT,
            (
                SELECT COUNT(ID)
                FROM TBL_FOLLOW
                WHERE FOLLOWING_MEMBER_ID = TM.ID
            ) AS FOLLOWING_COUNT,
            (
                SELECT CASE
                    WHEN COUNT(ID) > 0 THEN 1 ELSE 0 END
                FROM TBL_FOLLOW
                WHERE FOLLOWER_MEMBER_ID = TM.ID
                AND FOLLOWING_MEMBER_ID = #{memberId}
                AND FOLLOW_FAVORITE = 1
            ) AS FAVORITE,
            (
                SELECT CASE
                    WHEN COUNT(ID) > 0 THEN 1 ELSE 0 END
                FROM TBL_FOLLOW
                WHERE FOLLOWER_MEMBER_ID = TM.ID
                AND FOLLOWING_MEMBER_ID = #{memberId}
            ) AS IS_FOLLOW
        FROM TBL_MEMBER TM
        WHERE TM.ID = #{profileCardMemberId}
    </select>


<!--  즐겨찾기 토글  -->
<!--  클릭 할때 현재 팔로잉 여부에 따라 토글  -->
    <update id="update" parameterType="FollowVO">
        UPDATE TBL_FOLLOW
        SET FOLLOW_FAVORITE =
            <choose>
                <when test="followFavorite == 0">1</when>
                <when test="followFavorite == 1">0</when>
                <otherwise>FOLLOW_FAVORITE</otherwise>
            </choose>
        WHERE FOLLOWER_MEMBER_ID = #{followerMemberId}
        AND FOLLOWING_MEMBER_ID = #{followingMemberId}
    </update>

<!--  팔로우 취소  -->
<!--  받는사람의 아이디가 n이고, 한 사람의 아이디가 n인 행을 삭제  -->
    <delete id="delete" parameterType="FollowVO">
        DELETE FROM TBL_FOLLOW
        WHERE FOLLOWER_MEMBER_ID = #{followerMemberId} AND FOLLOWING_MEMBER_ID = #{followingMemberId}
    </delete>

<!--  회원탈퇴용 팔로우 전체삭제  -->
    <delete id="deleteAllByWithdraw" parameterType="Long">
        DELETE FROM TBL_FOLLOW
        WHERE FOLLOWER_MEMBER_ID = #{memberId} OR FOLLOWING_MEMBER_ID = #{memberId}
    </delete>
</mapper>